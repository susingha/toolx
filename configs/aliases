# sup: aliases

export PATH=$HOME/bin:$PATH
export HELM_EXPERIMENTAL_OCI=1

alias    vi=vim
alias    vr='vim -R'
alias    ..="cd .."
alias   ...="cd ../.."
alias     l="ls -l; pwd"
alias    l.='ls -d .* --color=tty'
alias    ls='ls --color=tty'
alias    ll='ls -nrt --color=tty'
alias    la='ls -nrtla'

alias    sc="screen -x"
alias   gsc="gtags-cscope -dp7"
alias   csc="cscope -dp5"

alias   p4o="p4 opened | cut -d '#' -f 1"

alias watch='watch '
alias     f="find . -name"
alias     g=grep
alias    gg="git grep "

alias     k=kubectl
alias    kk='kubectl config get-contexts'

# git
alias  diff="git diff --no-prefix --relative"

# shopt
# shopt -s direxpand

function gt() {
    git log --oneline | head -3
    git remote -v
    git status
    git branch
}

function genscope_gtags() { # Generates gtags

rm GPATH   GRTAGS  GTAGS  GFILES

find . -name '*.cpp'    > GFILES
find . -name '*.cc'    >> GFILES
find . -name '*.c'     >> GFILES
find . -name '*.h'     >> GFILES
find . -name '*.hh'    >> GFILES
find . -name '*.regc'  >> GFILES
find . -name '*.regh'  >> GFILES
find . -name '*.proto'  >> GFILES
gtags --file GFILES

}

function genscope_cscope() { # Generates cscope

rm cscope.files cscope.out

find . -name '*.cpp'    > cscope.files
find . -name '*.cc'    >> cscope.files
find . -name '*.c'     >> cscope.files
find . -name '*.h'     >> cscope.files
find . -name '*.hh'    >> cscope.files
find . -name '*.regc'  >> cscope.files 
find . -name '*.regh'  >> cscope.files 
find . -name '*.proto'  >> GFILES
cscope -qbR

}

function genscope() { # Generates gtags
#   genscope_gtags
    genscope_cscope
}

function cdo()
{
    a=controller/lcp/ovs/mh/
    b=controller/lcp/ovs/mh/src/cpp
    c=mpa/clients/opsAgent/
    d=controller/lcp/ovs/mh/itest/colibri/vmware/integration_suite
    e=proto_oh

    y=$SF_PREFIX/../ims/
    z=$SF_PREFIX/../ims/src/third-party/nse

    printf "\
	1. $a\n\
	2. $b\n\
	3. $c\n\
	4. $d\n\
	5. $e\n"
    printf "to ? [1]:"
    
    read -t 3 ch
    case $ch in
	1) cmd="cd $a";;
	2) cmd="cd $b";;
	3) cmd="cd $c";;
	4) cmd="cd $d";;
	5) cmd="cd $e";;
	*) cmd="cd $a";;
    esac

    printf "\n$cmd\n"
    $cmd
}
